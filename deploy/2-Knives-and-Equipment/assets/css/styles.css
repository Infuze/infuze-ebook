/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
@import url(./fonts/fa/famin.css);
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'Avenir';
  src: url("./fonts/avenir/AvenirNext-Regular.woff") format("woff"), url("./fonts/avenir/AvenirNext-Regular.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Avenir';
  src: url("./fonts/avenir/AvenirNext-DemiBold.woff") format("woff"), url("./fonts/avenir/AvenirNext-Bold.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: 'Avenir';
  src: url("./fonts/avenir/AvenirNext-DemiBold.woff") format("woff"), url("./fonts/avenir/AvenirNext-Bold.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: 900;
  font-style: normal; }

/* VARIABLES */
/* MOBILE VARIABLES */
html {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  min-height: 100%;
  overflow-x: hidden;
  overflow-y: hidden; }

body.slides-template {
  height: 100%; }

.slides-template .l-wrapper {
  display: flex;
  justify-content: normal;
  max-width: 1200px !important;
  padding: 0 !important;
  height: calc(100% - 96px);
  overflow-y: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
  position: absolute;
  margin: 0;
  top: 36px;
  width: 100%; }

/* PAGE STYLES */
.container--layout-1 {
  /*max-width: 1200px;
  margin: 0 auto;*/
  width: auto;
  height: auto;
  padding: 10px;
  -webkit-tap-highlight-color: transparent;
  color: #000000;
  font-size: 100%;
  font-family: Avenir, sans-serif;
  font-size: 1em;
  line-height: 1.6em;
  /*  COLUMN SETUP  */
  /* TABLES - MAYBE PUT IN SEPERATE */
  /* VIDEO */
  /* CENTRE & SCALE CONTAINER */
  /*.player_container {*/
  /*font-size: 85%;*/
  /*!*background: yellow;*!*/
  /*}*/
  /*  GO FULL WIDTH AT LESS THAN 540 PIXELS */
  /* Portrait and Landscape */
  /* Landscape */ }
  .container--layout-1 p:first-of-type {
    margin-top: 0;
    padding-top: 0; }
  .container--layout-1 p:last-of-type {
    margin-bottom: 0;
    margin-bottom: 0; }
  .container--layout-1 .page-2col-flexbox {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: stretch;
    align-content: stretch; }
  .container--layout-1 .page-2col-flexbox + .page-2col-flexbox {
    margin-top: 20px;
    border-top: solid 1px #c4c4c4;
    padding-top: 10px; }
  .container--layout-1 .page-2col-flexbox h1, .container--layout-1 .page-general-h1 {
    margin: 5px 0 10px 0;
    font-weight: 600;
    font-size: 1.6em;
    line-height: 1.2em;
    color: #343434; }
  .container--layout-1 .page-general-h2 {
    font-size: 1.6em;
    margin: 5px 0 10px 0;
    color: #343434; }
  .container--layout-1 .page-col-1 {
    padding: 10px 0 0 0; }
  .container--layout-1 .page-col-2-1 {
    flex: 1;
    padding: 20px 20px 0 0; }
  .container--layout-1 .page-col-2-2 {
    flex: 1;
    padding: 20px 0 0 0; }
  .container--layout-1 .page-col-2-2 img {
    width: 100%;
    height: auto;
    display: block; }
  .container--layout-1 .page-col-2-2 img + img {
    margin-top: 5px; }
  .container--layout-1 .page-u-list ul {
    line-height: 1.6em;
    margin: 5px 0 0 -15px; }
  .container--layout-1 .page-u-list ul li {
    padding: 3px 0; }
  .container--layout-1 .page-table-base {
    border-collapse: collapse;
    width: 100%; }
    .container--layout-1 .page-table-base td, .container--layout-1 .page-table-base th {
      text-align: left;
      padding: 8px; }
    .container--layout-1 .page-table-base table, .container--layout-1 .page-table-base th, .container--layout-1 .page-table-base td {
      border: 1px solid rgba(0, 0, 0, 0.4); }
    .container--layout-1 .page-table-base th {
      background-color: red;
      border-bottom: transparent;
      color: white; }
    .container--layout-1 .page-table-base tr:nth-child(even) {
      background-color: #dddddd; }
    .container--layout-1 .page-table-base tr:nth-child(odd) {
      background-color: #f6f6f6; }
  .container--layout-1 .page-ivid-container {
    /*width: 100px;*/
    /*height: 100px;*/
    background-color: black;
    /*top:40px;*/
    /*bottom: 100px;*/
    /*right: 0;*/
    margin: auto; }
  .container--layout-1 .page-center-scale-container {
    height: 100px;
    margin: auto; }
  .container--layout-1 .inf-lesson-intro-container {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: center;
    align-content: center;
    height: 80px;
    margin: 40px auto; }
  .container--layout-1 .inf-lesson-intro-logo {
    flex: 1;
    display: flex;
    justify-content: flex-end;
    padding: 0 20px 0 0;
    height: inherit; }
  .container--layout-1 .inf-lesson-intro-logo img {
    height: 100%;
    width: auto; }
  .container--layout-1 .inf-lesson-intro-heading {
    flex: 2;
    padding: 0 0 0 20px;
    border-left: solid 2px red;
    height: inherit;
    display: flex;
    flex-direction: column;
    justify-content: center; }
  .container--layout-1 .inf-lesson-intro-heading h1, .container--layout-1 .inf-lesson-intro-heading h2 {
    padding: 4px 0;
    margin: 0;
    font-weight: 600; }
  @media only screen and (max-width: 540px) {
    .container--layout-1 {
      /*body {
        font-size: 85%;
        /!*background: violet;*!/
    }*/
      /*.page-section p {*/
      /*font-size: 120%;*/
      /*}*/ }
      .container--layout-1 .page-span_2_of_2, .container--layout-1 .page-span_1_of_2 {
        width: 100%;
        padding-bottom: 1.4%;
        border-bottom: #c4c4c4 1px solid; }
      .container--layout-1 .page-group {
        border-bottom: none; }
      .container--layout-1 .page-intro {
        line-height: 1.5em;
        width: 100%; }
      .container--layout-1 .page-table-container, .container--layout-1 .page-table-container-75 {
        overflow-x: scroll; }
      .container--layout-1 .page-table-container img {
        min-width: 700px; }
      .container--layout-1 .page-table-container-75 img {
        min-width: 600px; }
      .container--layout-1 .page-container-2col {
        display: block; }
      .container--layout-1 .page-2col-flexbox {
        display: block; }
      .container--layout-1 .page-col-2-1 {
        padding: 10px 0 0 0; }
      .container--layout-1 .inf-lesson-intro-container {
        display: block;
        height: auto;
        margin: 20px 0; }
      .container--layout-1 .inf-lesson-intro-logo {
        display: block;
        height: 90px;
        text-align: center; }
      .container--layout-1 .inf-lesson-intro-heading {
        display: block;
        padding: 10px 0;
        border-left: none;
        border-bottom: red 2px solid; } }
  @media only screen and (min-device-width: 375px) and (max-device-width: 710px) and (-webkit-min-device-pixel-ratio: 2) {
    .container--layout-1 body {
      /*font-size: 80%;*/ }
    .container--layout-1 .page-section {
      padding: 5px; }
    .container--layout-1 .page-col {
      margin: 1% 0 1% 0; }
    .container--layout-1 .page-span_2_of_2, .container--layout-1 .page-span_1_of_2 {
      width: 100%;
      padding-bottom: 1.4%;
      border-bottom: #c4c4c4 1px solid; }
    .container--layout-1 .page-group {
      border-bottom: none; }
    .container--layout-1 .page-page-intro {
      line-height: 1.5em;
      width: 100%; }
    .container--layout-1 .page-table-container, .container--layout-1 .page-table-container-75 {
      -webkit-overflow-scrolling: touch;
      overflow-x: scroll; }
    .container--layout-1 .page-table-container img {
      width: 800px;
      height: auto; }
    .container--layout-1 .page-table-container-75 img {
      width: 600px; }
    .container--layout-1 .page-container-2col {
      display: block; } }
  @media only screen and (min-device-width: 375px) and (max-device-width: 710px) and (-webkit-min-device-pixel-ratio: 2) and (orientation: landscape) {
    .container--layout-1 .page-container-2col {
      display: flex; } }

.container--media {
  width: 100%; }

.kg-block {
  text-align: center;
  /*background: #c0c0c0;*/
  /*border: #a0a0a0 solid 1px;*/
  height: 70vh;
  width: 100%;
  /*margin: 20px;*/ }

.kg-block:before {
  content: '';
  /*   content: '';
    margin-left: -0.25em; */
  display: inline-block;
  height: 100%;
  vertical-align: middle; }

.kg-centered {
  display: inline-block;
  vertical-align: middle;
  width: 90%;
  /*padding: 10px 15px;*/
  /*border: #a0a0a0 solid 1px;*/
  /*background: #f5f5f5;*/ }

@font-face {
  font-family: 'Avenir';
  src: url("./fonts/AvenirNext-Regular.woff") format("woff"), url("./fonts/AvenirNext-Regular.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Avenir';
  src: url("./fonts/AvenirNext-Bold.woff") format("woff"), url("./fonts/AvenirNext-Bold.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: 'Avenir';
  src: url("./fonts/AvenirNext-DemiBold.woff") format("woff"), url("./fonts/AvenirNext-DemiBold.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: 900;
  font-style: normal; }

/* Media Query Mixins
------------------------------------*/
/* ON/OFF Switch */
.onoffswitch {
  position: relative;
  width: 55px;
  display: inline-block;
  font-size: 80%; }
  .onoffswitch .onoffswitch-label {
    display: block;
    overflow: hidden;
    cursor: pointer;
    border: 1px solid #e6e6e6;
    border-radius: 20px;
    margin: 0; }
  .onoffswitch .onoffswitch-inner {
    width: 200%;
    margin-left: -100%;
    transition: margin 0.15s ease-in-out; }
    .onoffswitch .onoffswitch-inner:before, .onoffswitch .onoffswitch-inner:after {
      float: left;
      width: 50%;
      height: 24px;
      padding: 0;
      line-height: 24px;
      font-size: 80%;
      color: white;
      font-weight: normal;
      box-sizing: border-box; }
    .onoffswitch .onoffswitch-inner:before {
      content: "ON";
      padding-left: 10px;
      background-color: #007bc8;
      color: white; }
    .onoffswitch .onoffswitch-inner:after {
      content: "OFF";
      padding-right: 10px;
      background-color: #fafafa;
      color: #3d3d3d;
      text-align: right; }
  .onoffswitch .onoffswitch-switch {
    width: 22px;
    height: 22px;
    margin: 0;
    background: white;
    box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);
    border-radius: 50%;
    position: absolute;
    top: 2px;
    bottom: 0;
    right: 35px;
    transition: right 0.15s ease-in-out; }

.toggle-group {
  position: relative;
  height: 27px;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  top: 50%;
  left: 20px;
  margin-top: -13.5px; }
  .toggle-group input[type=checkbox] {
    position: absolute;
    left: 10px; }
    .toggle-group input[type=checkbox]:checked ~ .onoffswitch .onoffswitch-label .onoffswitch-inner {
      margin-left: 0; }
    .toggle-group input[type=checkbox]:checked ~ .onoffswitch .onoffswitch-label .onoffswitch-switch {
      right: 1px;
      box-shadow: 0 0 3px rgba(0, 0, 0, 0.5); }
    .toggle-group input[type=checkbox]:focus ~ .onoffswitch {
      outline: thin dotted #333;
      outline: 0; }
  .toggle-group label {
    position: absolute;
    cursor: pointer;
    padding-left: 65px;
    display: inline-block;
    text-align: left;
    line-height: 24px;
    width: 100%;
    z-index: 1;
    height: 24px;
    font-weight: 200; }

.l-header {
  display: flex;
  align-items: center;
  position: fixed;
  height: 20px;
  left: 0;
  top: 0;
  right: 0;
  padding: 8px;
  background-color: red;
  z-index: 1; }

.l-header.row2 {
  top: 36px;
  height: 10px;
  padding: 8px;
  background-color: #f1f1f1; }

.l-header__banner {
  padding-left: 10px;
  font-size: 24px;
  color: white; }
  .l-header__banner span {
    font-weight: 600; }

.l-header__banner.row2 {
  color: black;
  padding-left: 10px;
  font-size: 14px;
  font-weight: normal; }
  .l-header__banner.row2 span {
    font-weight: 600; }

.nav-bar__button {
  font-size: 0;
  position: relative;
  color: white;
  text-align: center;
  background: #656565;
  border-radius: 50px;
  height: 30px;
  width: auto;
  border-color: #656565;
  cursor: pointer;
  transition: 0.2s;
  border-style: none; }

.l-nav-bar {
  position: fixed;
  background-image: linear-gradient(to bottom, #272528, #333840);
  width: 100%;
  z-index: 1;
  bottom: 0; }

.nav-bar__container {
  display: flex;
  align-items: center;
  padding: 0 0.5rem;
  width: 100%;
  justify-content: space-between;
  height: 46px; }

.nav-bar_leftRight_wrapper {
  padding-right: 1.5em; }

.nav-bar_leftRight_wrapper:after {
  content: "";
  clear: both;
  display: table; }

.nav-bar__button:focus {
  outline: none; }

.nav-bar__button {
  width: 26px; }
  @media (min-width: 600px) {
    .nav-bar__button {
      width: 130px; } }

.nav-bar__button:last-child {
  margin-left: 20px; }
  @media (min-width: 600px) {
    .nav-bar__button:last-child {
      margin-left: 0px; } }

.nav-bar__button:active,
.nav-bar__button:focus,
.nav-bar__button.active {
  background-image: none;
  outline: 0;
  box-shadow: none;
  border-style: none; }

.no-touchevents .nav-bar__button:not(:disabled):hover {
  background: #ffa300;
  border-color: #ffa300; }

.nav-bar__button-text--left, .nav-bar__button-text--right {
  color: white;
  font-size: 12px;
  line-height: 12px;
  font-weight: 900;
  font-style: normal;
  visibility: hidden;
  border-style: none; }
  @media (min-width: 600px) {
    .nav-bar__button-text--left, .nav-bar__button-text--right {
      visibility: visible; } }

.nav-bar__button-text--left {
  margin: 0px 50px 0px 0px; }

.nav-bar__button-text--right {
  margin: 0px 0px 0px 30px; }

.nav-bar__button-circle--left, .nav-bar__button-circle--right {
  width: 32px;
  height: 32px;
  background: #fff;
  border-radius: 100px;
  border-style: solid;
  border-width: 3px;
  border-color: inherit;
  position: absolute;
  top: -4px;
  text-align: center; }
  .nav-bar__button-circle--left span.img, .nav-bar__button-circle--right span.img {
    height: 32px;
    margin: 5px;
    opacity: 0.65;
    display: block;
    box-sizing: border-box; }

.nav-bar__button-circle--left {
  left: -4px; }
  .nav-bar__button-circle--left span.img {
    background: url(./images/arrow-left-solid.svg) no-repeat; }

.nav-bar__button-circle--right {
  right: -4px; }
  .nav-bar__button-circle--right span.img {
    background: url(./images/arrow-right-solid.svg) no-repeat; }

.nav-bar__button:disabled {
  background: #464646;
  border-color: #464646;
  cursor: default; }

.nav-bar__button:disabled > .nav-bar__button-text--left, .nav-bar__button:disabled > .nav-bar__button-text--right {
  color: rgba(255, 255, 255, 0.2); }

.nav-bar__button:disabled > .nav-bar__button-circle--left, .nav-bar__button:disabled > .nav-bar__button-circle--right {
  background: #5f5f5f; }

/*Radio Buttons NAV */
.stv-radio-buttons-wrapper {
  width: 40%;
  max-width: 450px;
  min-width: 120px; }

.stv-radio-buttons-wrapper:after {
  content: "";
  clear: both;
  display: table; }

.stv-radio-buttons-wrapper input[type="radio"] {
  opacity: 0;
  position: absolute; }

.stv-radio-buttons-wrapper div {
  /*border: 10px solid green;*/
  width: calc(33% - 1px);
  float: left;
  margin-right: 1px; }

.stv-radio-buttons-wrapper .rSpan {
  display: inline-block;
  width: 100%;
  height: 34px;
  line-height: 34px;
  text-align: center;
  background-color: #656565;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  cursor: pointer; }
  @media (min-width: 600px) {
    .stv-radio-buttons-wrapper .rSpan {
      height: 30px;
      line-height: 30px; } }

.stv-radio-buttons-wrapper .rSpan img {
  height: 22px;
  vertical-align: middle; }

.stv-radio-buttons-wrapper .r1 {
  border-radius: 20px 0 0 20px; }

.stv-radio-buttons-wrapper span.img {
  display: inline-block;
  height: 22px;
  width: 22px; }

.stv-radio-buttons-wrapper .r1 span.img {
  background: url(./images/icon_docs.svg) no-repeat;
  vertical-align: text-bottom; }

.stv-radio-buttons-wrapper .r2 span.img {
  background: url(./images/icon_quiz.svg) no-repeat;
  vertical-align: text-top; }

.stv-radio-buttons-wrapper .r3 span.img {
  background: url(./images/icon_media.svg) no-repeat;
  vertical-align: text-top; }

.stv-radio-buttons-wrapper .r2 {
  border-radius: 0; }

.stv-radio-buttons-wrapper .r3 {
  border-radius: 0 20px 20px 0; }

.stv-radio-buttons-wrapper label {
  display: inline-block;
  cursor: pointer;
  width: 100%; }

.stv-radio-buttons-wrapper .rSpan .button-text {
  color: white;
  font-size: 12px;
  font-family: Avenir;
  font-weight: 900;
  font-style: normal;
  /*vertical-align: middle;*/
  padding-left: 5px;
  display: none; }
  @media (min-width: 600px) {
    .stv-radio-buttons-wrapper .rSpan .button-text {
      display: inline-block; } }

.stv-radio-buttons-wrapper input[type="radio"]:checked + span {
  background-color: #ffa300;
  transition: 0s; }

.stv-radio-buttons-wrapper input[type="radio"]:not(:checked):hover + span {
  background-color: #ffa300;
  transition: 0.3s; }

/* TOGGLE switch - the box around the slider */
.nav--toggle {
  display: inline-block;
  text-align: center;
  margin-top: 5px;
  font-size: 12px;
  font-weight: 900;
  font-style: normal; }
  .nav--toggle .title {
    font-size: 10px;
    text-align: center;
    color: rgba(0, 0, 0, 0.7);
    top: -12px;
    height: 10px; }

.switch {
  position: relative;
  display: inline-block;
  width: 44px;
  height: 24px; }

/* Hide default HTML checkbox */
.switch input {
  display: none; }

/* The slider */
.kSlider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 34px;
  background-color: rgba(0, 0, 0, 0.3);
  transition: 0.4s; }
  .kSlider .kSlidertext {
    position: absolute;
    color: white;
    font-size: 12px;
    font-weight: 900;
    font-style: normal;
    text-align: center;
    top: 9px; }
  .kSlider .kSlidertext.On {
    left: 8px;
    top: 10px; }
  .kSlider .kSlidertext.Off {
    left: 33px;
    top: 10px; }

.kSliderC {
  position: absolute;
  height: 20px;
  width: 20px;
  left: 3px;
  bottom: 2px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%; }

input:checked + .kSlider {
  background-color: #00b5e2; }
  input:checked + .kSlider .kSliderC {
    -webkit-transform: translateX(19px);
            transform: translateX(19px); }

.nav-bar__progress {
  background-color: red;
  height: 12px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  letter-spacing: 0.2em;
  font-size: 8px; }

.nav-bar__progress-bg {
  width: 40%;
  background-color: rgba(0, 0, 0, 0.4);
  border-radius: 6px;
  visibility: visible;
  margin-right: 10px;
  margin-left: 40px; }

.nav-bar__progress-bar {
  width: 1%;
  height: 6px;
  background-color: white;
  text-align: right;
  border-radius: 6px;
  position: relative;
  transition: 0.5s; }

html {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  min-height: 100%;
  overflow-x: hidden;
  overflow-y: hidden; }

body {
  height: 100%;
  width: 100%;
  min-height: 100%;
  -webkit-text-size-adjust: none;
  font-family: "Avenir", sans-serif;
  margin: 0;
  padding: 0;
  font-size: 15px;
  overflow-y: hidden;
  background-color: white; }

.l-wrapper {
  display: flex;
  justify-content: normal;
  max-width: 1800px;
  padding: 0;
  margin: 0;
  height: calc(100% - 120px);
  overflow-y: auto;
  overflow-x: hidden;
  -webkit-overflow-scrolling: touch;
  position: absolute;
  top: 62px;
  width: 100%; }

.container--layout-1 {
  height: auto;
  flex-grow: 1;
  flex-basis: 0;
  width: 100%; }

.hidden {
  display: none;
  visibility: hidden; }

.page-number {
  display: none; }

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: "Avenir";
  src: url("./fonts/avenir/AvenirNext-Regular.woff") format("woff"), url("./fonts/avenir/AvenirNext-Regular.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: "Avenir";
  src: url("./fonts/avenir/AvenirNext-DemiBold.woff") format("woff"), url("./fonts/avenir/AvenirNext-Bold.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: "Avenir";
  src: url("./fonts/avenir/AvenirNext-DemiBold.woff") format("woff"), url("./fonts/avenir/AvenirNext-Bold.ttf") format("truetype");
  /* Safari, Android, iOS */
  font-weight: 900;
  font-style: normal; }

@font-face {
  font-family: Titillium Web;
  src: url(./fonts/Titillium_Web/TitilliumWeb-Regular.ttf) format("truetype");
  font-weight: 400; }

@font-face {
  font-family: Titillium Web;
  src: url(./fonts/Titillium_Web/TitilliumWeb-SemiBold.ttf) format("truetype");
  font-weight: 600; }

@font-face {
  font-family: Titillium Web;
  src: url(./fonts/Titillium_Web/TitilliumWeb-Bold.ttf) format("truetype");
  font-weight: 800; }

/* Media Query Mixins
------------------------------------*/
html {
  margin: 0;
  padding: 0; }

body {
  -webkit-text-size-adjust: none;
  font-family: "Avenir", sans-serif;
  margin: 0;
  padding: 0;
  font-size: 15px; }
  @media (max-width: 599px) {
    body {
      font-size: 16px; } }
  @media (min-width: 600px) {
    body {
      font-size: 17px; } }
  @media (min-width: 900px) {
    body {
      font-size: 17px; } }
  @media (min-width: 1200px) {
    body {
      padding: 0; } }
  @media (min-width: 1600px) {
    body {
      padding: 0; } }

/* ul li + li {
  padding-top: 1em;
}

ol li + li {
  padding-top: 1em;
}

ol ul {
  padding-top: 0.8em;
}

ul ul {
  padding-top: 1em;
}

@include for-size(phone-only) {
  ul {
    padding-left: 1.5em;
  }
} */
/* Media Query Mixins
------------------------------------*/
.hidden {
  display: none;
  visibility: hidden; }

.container--iquiz {
  color: #444;
  font-size: 100%;
  -webkit-tap-highlight-color: transparent;
  width: 100%;
  -webkit-text-size-adjust: none;
  font-family: "Avenir", sans-serif;
  position: relative;
  height: 100%;
  /*QUIZ INTRO SCREEN*/
  /*.iquiz_tipText {*/
  /*margin: .2em 0 1em 0;*/
  /*font-weight: 300;*/
  /*font-size: 18px;*/
  /*line-height: 24px;*/
  /*}*/
  /*.iquiz_tipText a {*/
  /*font-weight: 600;*/
  /*color: #444;*/
  /*}*/ }
  .container--iquiz .iquiz_Main {
    margin: 0 10px;
    float: none;
    clear: both;
    /*background-color: yellow;*/
    padding: 0 0 10px 0;
    /*width: calc(100% - 100px);*/
    /*font-family: Titillium Web, sans-serif;*/ }
  .container--iquiz .iquiz_questionText {
    padding-bottom: 4px; }
  .container--iquiz .iquiz_questionText h1 {
    margin: 20px 0 0 0;
    font-weight: bold;
    /*font-size: 1.5em;*/
    font-size: 22px; }
  .container--iquiz .iquiz_questionText h2 {
    margin: 15px 0 0 0;
    font-weight: normal;
    /*background-color: yellow;*/
    font-size: 22px;
    line-height: 30px; }
  .container--iquiz .iquiz_questionText h3 {
    margin: 6px 0 6px 0;
    font-weight: normal;
    font-size: 18px;
    line-height: 24px; }
  .container--iquiz .iquiz_questionText a {
    font-weight: 600;
    color: #444; }
  .container--iquiz .iquiz_questionText .feedbackTickCross {
    padding: 10px 0 10px 0; }
  .container--iquiz .feedbackTickCross img {
    height: 80px; }
  .container--iquiz .iquiz_feedback .iquiz_questionText h1 {
    /*background-color: yellow;*/
    margin: 5px 0 5px 0; }
  .container--iquiz .iquiz_feedback .iquiz_questionText h3:nth-of-type(1) {
    /*background-color: yellow;*/
    margin: 20px 0 0 0; }
  .container--iquiz .iquiz-textarea-container {
    position: relative;
    width: 100%; }
  .container--iquiz .iquiz-textarea-container.with-btn {
    width: calc(100% - 30px); }
  .container--iquiz .iquiz-textarea-container button.disabled {
    opacity: .3;
    cursor: default; }
  .container--iquiz .iquiz_submitBtn {
    color: white;
    background: #ffa300;
    border-radius: 50px;
    height: 30px;
    line-height: 30px;
    width: 200px;
    border-color: #ffa300;
    cursor: pointer;
    text-align: center;
    margin: 0 auto;
    font-weight: 600;
    letter-spacing: 2px;
    transition: 0.2s; }
  .container--iquiz .iquiz_submitBtn.disabled {
    background: lightgray;
    border-color: lightgray;
    cursor: default; }
  .container--iquiz .iquiz_submitBtn:focus {
    outline: none; }
  .container--iquiz .iquiz-btn-add-container {
    position: relative;
    background-color: rgba(0, 0, 0, 0.08);
    padding: 0 10px 10px 10px;
    margin-bottom: 10px; }
  .container--iquiz .iquiz-btn-remove, .container--iquiz .iquiz-btn-add {
    position: absolute;
    border: 1px solid rgba(1, 1, 1, 0.6);
    /*border: none;*/
    background-color: white;
    margin: 0 0 0 5px;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    cursor: pointer;
    font-size: 26px;
    padding: 0px 5px; }
  @media (hover: hover) {
    .container--iquiz .iquiz-btn-remove:not(.disabled):hover, .container--iquiz .iquiz-btn-add:not(.disabled):hover {
      background-color: rgba(0, 0, 0, 0.4);
      color: white; } }
  .container--iquiz .iquiz-btn-add {
    position: relative;
    margin: 0; }
  .container--iquiz .iquiz-btn-add-text {
    /*background-color: red;*/
    position: absolute;
    padding-left: 6px;
    /*border: solid 1px blue;*/
    margin-top: 5px;
    cursor: pointer; }
  @media (hover: hover) {
    .container--iquiz .iquiz_submitBtn:not(.disabled):hover {
      background: #fe5000;
      border-color: #fe5000;
      text-decoration: none; } }
  .container--iquiz .iquiz_popBG {
    width: 100%;
    height: 100%;
    background-color: black;
    opacity: 0.8;
    position: fixed;
    top: 0px;
    left: 0px;
    bottom: 0px;
    right: 0px;
    /*pointer-events: none;*/
    display: none; }
  .container--iquiz .iquiz_popContainer {
    /*width: calc(100% - 70px);*/
    width: 80%;
    height: calc(100% - 185px);
    min-height: 100px;
    /*background-color: red;*/
    position: fixed;
    /*top: 100px; SET IN JS */
    left: 10%;
    opacity: 1;
    display: none; }
  .container--iquiz .iquiz_popPanel {
    background-color: white;
    border-radius: 4px;
    text-align: center;
    overflow: hidden;
    height: 100%;
    margin-bottom: 10px; }
  .container--iquiz .iquiz_popTitle {
    padding: 10px;
    font-weight: 700;
    background-color: #ebebeb;
    font-size: 22px; }
  .container--iquiz .iquiz_innerScroll {
    width: 96%;
    height: calc(100% - 54px);
    /*background-color: blue;*/
    /*border:1px solid red;*/
    margin: 0 auto;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; }
  .container--iquiz .iquiz_popClose {
    float: right;
    margin-right: -26px;
    margin-top: -12px;
    color: white;
    cursor: pointer;
    font-size: 36px; }
  .container--iquiz .iquiz_popClose a {
    /*padding: 8px 8px 8px 32px;*/
    text-decoration: none;
    /*font-size: 36px;*/
    color: #818181;
    /*display: block;*/
    transition: 0.3s; }
  .container--iquiz .iquiz_popClose a:hover {
    color: #f1f1f1; }
  .container--iquiz .iquiz_feedback {
    display: none; }
  .container--iquiz .iquiz-lesson-intro-container {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: flex-start;
    align-content: flex-start;
    height: 80px;
    margin: 40px auto;
    /*max-width: 700px;*/ }
  .container--iquiz .iquiz-lesson-intro-logo {
    flex: 1;
    display: flex;
    justify-content: flex-end;
    padding: 0 20px 0 0;
    height: inherit; }
  .container--iquiz .iquiz-lesson-intro-logo img {
    height: 100%;
    width: auto; }
  .container--iquiz .iquiz-lesson-intro-heading {
    flex: 2;
    padding: 0 0 0 20px;
    border-left: solid 2px red;
    height: inherit;
    display: flex;
    flex-direction: column;
    justify-content: center; }
  .container--iquiz .iquiz-lesson-intro-heading h1,
  .container--iquiz .iquiz-lesson-intro-heading h2 {
    padding: 4px 0;
    margin: 0;
    font-weight: 600; }
  .container--iquiz .iquiz-intro-info-panel {
    margin: 0 auto;
    text-align: center; }
  .container--iquiz .iquiz-intro-info-panel p {
    font-size: 18px;
    line-height: 30px;
    padding: 8px 0;
    margin-bottom: 60px; }
  @media only screen and (min-device-width: 375px) and (max-device-width: 667px) and (-webkit-min-device-pixel-ratio: 2) {
    .container--iquiz .iquiz-lesson-intro-container {
      display: block;
      height: auto;
      margin: 40px 0; }
    .container--iquiz .iquiz-lesson-intro-logo {
      display: block;
      height: 90px;
      text-align: center; }
    .container--iquiz .iquiz-lesson-intro-heading {
      display: block;
      padding: 10px 0;
      border-left: none;
      border-bottom: red 2px solid;
      text-align: center; } }
  @media only screen and (max-width: 710px) {
    .container--iquiz .iquiz-lesson-intro-container {
      margin: 40px 0; }
    .container--iquiz .iquiz-intro-info-panel p {
      margin-bottom: 20px; }
    .container--iquiz .iquiz-lesson-intro-heading h1 {
      font-size: 25px; } }
  .container--iquiz .noselect {
    -webkit-touch-callout: none;
    /* iOS Safari */
    -webkit-user-select: none;
    /* Safari */
    /* Konqueror HTML */
    -moz-user-select: none;
    /* Firefox */
    -ms-user-select: none;
    /* Internet Explorer/Edge */
    user-select: none;
    /* Non-prefixed version, currently supported by Chrome and Opera */ }

.quiz_clickText_container {
  position: relative;
  /*background-color: red;*/
  /*height: auto;*/
  width: 100%;
  overflow: hidden;
  /*padding: 2px;*/
  /*margin: 20px 0 10px 0;*/ }

/*.quiz_clickText_container.mc {*/
/*margin-bottom: 5px;*/
/*}*/
.quiz_highlighter {
  position: absolute;
  top: -30px;
  /*left: 5px;*/
  background-color: rgba(208, 223, 0, 0.8);
  /*opacity: .8;*/
  height: 30px;
  /*width: calc(100% - 10px);*/
  width: 100%;
  z-index: -1;
  border-radius: 6px; }

.quiz_highlighter.hide {
  visibility: hidden; }

.quiz_highlighter.mc2 {
  background-color: #78eb79; }

/*.quiz_highlighter.mc.selected {*/
/*!*background-color:#88dc88bf;*!*/
/*!*background-color:rgba(0, 0, 0, 0);*!*/
/*!*transition: 0.2s;*!*/
/*}*/
.quiz_clickText, .quiz_text {
  /*margin: 12px 0 2px 0;*/
  font-weight: 400;
  /*font-size: 1.8em;*/
  font-size: 22px;
  padding: 5px 0 5px 0;
  /*margin: 5px;*/
  transition: 0.2s;
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Safari */
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  /* Non-prefixed version, currently supported by Chrome and Opera */ }

.quiz_clickText {
  position: relative;
  cursor: pointer; }

.quiz_clickText.mc1 {
  /*background-color:rgba(229, 229, 229, 1);*/
  background-color: rgba(0, 0, 0, 0.06);
  border: 1px solid #d3d3d3;
  margin: 0 0 5px 0;
  padding-left: 10px;
  border-radius: 6px; }

.quiz_clickText.mc1:last-of-type {
  margin-bottom: 10px; }

.quiz_clickText.selected {
  background-color: #CCD846;
  /*box-shadow: inset 0 -1px 0 red;*/
  /*box-sizing: border-box;*/
  /*-moz-box-sizing: border-box;*/
  /*-webkit-box-sizing: border-box;*/
  /*border:1px solid rgba(0, 0, 0, 0.2);*/
  /*background-color:rgba(0, 0, 0, 0);*/
  /*transition: 0.2s;*/ }

.quiz_clickText.selected.notransition {
  transition: 0s;
  border: 1px solid #CCD846; }

.quiz_clickTextTable {
  border: 1px solid #d3d3d3;
  width: 100%;
  border-collapse: collapse;
  margin-bottom: 5px;
  /*padding-top: 20px;*/ }

.quiz_clickTextTable:last-of-type {
  margin-bottom: 10px; }

.quiz_clickTextTable_col1 {
  background-color: rgba(0, 0, 0, 0.08);
  width: 40%;
  text-align: center; }

.quiz_clickTextTable_col2 {
  text-align: center;
  padding: 5px 0; }

.quiz_clickTextTable_col2.left {
  text-align: left; }

.iquiz-ft-ques-container {
  background-color: rgba(0, 0, 0, 0.08);
  padding: 10px 10px 0 10px; }

.iquiz-ft-ques-container.in-table {
  background-color: white;
  padding: 0 0 10px 0; }

.iquiz-ft-table-base {
  border-collapse: collapse;
  width: 100%; }
  .iquiz-ft-table-base td, .iquiz-ft-table-base th {
    text-align: left;
    padding: 8px; }
  .iquiz-ft-table-base table, .iquiz-ft-table-base th, .iquiz-ft-table-base td {
    border: 1px solid rgba(0, 0, 0, 0.4); }
  .iquiz-ft-table-base th {
    background-color: red;
    border-bottom: transparent;
    color: white; }
  .iquiz-ft-table-base tr:nth-child(even) {
    background-color: #dddddd; }
  .iquiz-ft-table-base tr:nth-child(odd) {
    background-color: #f1f1f1; }

.iquiz-ft-freetext {
  /*background-color:rgba(0, 0, 0, .03);*/
  background-color: white;
  width: 100%;
  border: 1px solid rgba(0, 0, 0, 0.3);
  /*-webkit-box-shadow: inset 0 20px 20px -20px rgba(0,0,0,0.3);*/
  /*-moz-box-shadow: inset 0 20px 20px -20px rgba(0,0,0,0.3);*/
  box-shadow: inset 0px 3px 6px -2px rgba(0, 0, 0, 0.3);
  margin: 0 0 5px 0;
  /*padding-left: 10px;*/
  border-radius: 6px;
  box-sizing: border-box;
  font-weight: 400;
  font-size: 18px;
  padding: 5px 10px;
  resize: none;
  overflow: hidden;
  vertical-align: top;
  min-height: 45px;
  /*max-height: 100px;*/ }

.iquiz-ft-freetext.in-table {
  margin: 0 0 0 0; }

.iquiz-ft-freetext.iquiz-ft-answer.in-table {
  margin: 8px 0 0 0; }

.iquiz-ft-freetext.iquiz-ft-answer {
  background-color: #CCD846;
  border: none;
  box-shadow: none; }

.iquiz-ft-ques-container textarea:focus {
  background-color: #e4fbb0;
  outline: none; }

.iquiz-ft-ques-container button:focus, .iquiz-btn-add-container button:focus {
  outline: none; }

.iquiz-ft-ans-container {
  display: none;
  /*background-color:rgba(0, 0, 0, .06);*/
  background-color: #e4fbb0;
  padding: 10px;
  margin-bottom: 10px;
  /*border: solid 1px blue;*/ }

.iquiz-ft-ans-container.in-table {
  background-color: transparent;
  padding: 0;
  margin-bottom: 0; }

.iquiz-ft-submitBtn-container .iquiz_submitBtn {
  width: 150px; }

.iquiz-ft-submitBtn-container .iquiz_submitBtn:first-child {
  margin-right: 10px; }

.iquiz .nav-bar {
  position: fixed;
  background-color: #e2e2e2;
  width: calc(100% - 2rem);
  z-index: 1;
  bottom: 0;
  height: 3rem;
  padding: 0 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between; }

.iquiz .nav-bar__container {
  display: flex;
  align-items: center;
  height: 100%;
  padding: 0 0.5rem;
  width: 100%;
  justify-content: space-between; }

.iquiz .l-header {
  display: flex;
  align-items: center;
  position: fixed;
  height: 1rem;
  left: 0;
  top: 0;
  right: 0;
  padding: 10px;
  background-color: #f1f1f1;
  z-index: 1; }

.iquiz .l-header__banner {
  padding-left: 10px;
  font-size: 14px;
  font-weight: 200; }
  .iquiz .l-header__banner span {
    font-weight: 600; }

.iquiz .wrapper {
  display: flex;
  justify-content: normal;
  margin: 36px auto 50px auto;
  max-width: 900px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
